name: release-on-github

on:
  push:
    branches:
      # test creating a release without creating tags on this branch:
      - experiment/create-release
    tags: 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

defaults:
  run:
    shell: bash -l {0}

jobs:
  create-release:
    name: Build and Release
    env:
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      NSUnbufferedIO: YES
    runs-on: macos-latest
    timeout-minutes: 20
    steps:
    - uses: apple-actions/import-codesign-certs@v1
      id: codesign
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
        keychain: certs
    - uses: actions/checkout@v2.3.2
    - name: Check bundle version matches git tag
      uses: sparta-science/check-version-matches-tag@v1.0.3
      with:
        plist-path: App/Info.plist
    - uses: actions/cache@v2.1.1
      with:
        path: vendor/bundle
        key: bundled-gems-${{ hashFiles('**/Gemfile.lock') }}
    - name: ruby bundle
      run: |
        ruby --version
        bundler --version
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Build
      uses: sersoft-gmbh/xcodebuild-action@master
      with:
        workspace: SpartaConnect.xcworkspace
        scheme: Release UITests
        action: test
        configuration: Release
        derived-data-path: build/derived
    - name: Archive
      run: |
        bundle exec ./bin/xc-scheme.sh SpartaConnect -configuration Release -derivedDataPath build/derived -archivePath build/archive archive
        ls -la build/
        pushd build # refactor use ditto
        zip --recurse-paths --symlinks archive.zip archive.xcarchive
        popd
    - name: Upload archive results
      uses: actions/upload-artifact@v2
      with:
        name: archive.xcarchive
        path: build/archive.zip
    - name: Notarize the App
      env:
        DEVELOPER_ID_LOGIN: ${{ secrets.DEVELOPER_ID_LOGIN }}
        DEVELOPER_ID_PASSWORD: ${{ secrets.DEVELOPER_ID_PASSWORD }}
        ARCHIVE: build/archive.xcarchive
        EXPORT_OPTIONS: App/export-options.plist
        APP_NAME: SpartaConnect
        BUNDLE_ID: com.spartascience.SpartaConnect
      run: bin/dev/notarize.sh
    - name: Upload Notarized app
      uses: actions/upload-artifact@v2
      with:
        name: SpartaConnect
        path: build/export/SpartaConnect.zip
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@master
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        draft: true
        prerelease: true
        fail_on_unmatched_files: true
        body: |
          Automatically Created Release
          - Please update and upload appcast.xml (visible to customers)
          - Update these release notes (only visible to developers)
        files: |
          build/export/SpartaConnect.zip
          build/archive.zip
